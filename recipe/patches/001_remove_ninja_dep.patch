diff --git i/cpp/nanobind/CMakeLists.txt w/cpp/nanobind/CMakeLists.txt
index 8ea5622..873cd02 100644
--- i/cpp/nanobind/CMakeLists.txt
+++ w/cpp/nanobind/CMakeLists.txt
@@ -1,8 +1,12 @@
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 find_package(
   Python
   COMPONENTS Interpreter Development.Module
   REQUIRED
 )
+execute_process(
+  COMMAND "${Python_EXECUTABLE}" -m nanobind --cmake_dir
+  OUTPUT_STRIP_TRAILING_WHITESPACE OUTPUT_VARIABLE nanobind_ROOT)
 find_package(nanobind CONFIG REQUIRED)
 
 # Compile this source file seperately. Nanobind suggests to optimize bindings code for size, but
@@ -11,9 +15,10 @@ find_package(nanobind CONFIG REQUIRED)
 add_library(python_methods STATIC)
 target_sources(python_methods PRIVATE python_methods.cc)
 target_link_libraries(python_methods PUBLIC xgrammar)
+set_target_properties(python_methods PROPERTIES POSITION_INDEPENDENT_CODE ON)
 
 # Any code that uses nanobind directly lives here
-nanobind_add_module(xgrammar_bindings LTO nanobind.cc)
+nanobind_add_module(xgrammar_bindings NB_STATIC nanobind.cc)
 target_link_libraries(xgrammar_bindings PRIVATE python_methods)
 
 if(DEFINED SKBUILD_PROJECT_NAME)
@@ -23,6 +28,7 @@ else()
   set(LIB_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/python/xgrammar)
 endif()
 
+set_target_properties(xgrammar_bindings PROPERTIES POSITION_INDEPENDENT_CODE ON)
 set_target_properties(xgrammar_bindings PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${LIB_OUTPUT_DIRECTORY})
 set_target_properties(
   xgrammar_bindings PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIB_OUTPUT_DIRECTORY}
diff --git i/cpp/nanobind/python_methods.h w/cpp/nanobind/python_methods.h
index f3bbf8d..c598145 100644
--- i/cpp/nanobind/python_methods.h
+++ w/cpp/nanobind/python_methods.h
@@ -7,6 +7,7 @@
 #ifndef XGRAMMAR_NANOBIND_PYTHON_METHODS_H_
 #define XGRAMMAR_NANOBIND_PYTHON_METHODS_H_
 
+#define NANOBIND_BUILD
 #include <xgrammar/xgrammar.h>
 
 #include <optional>
diff --git i/pyproject.toml w/pyproject.toml
index 11fae7d..5f13c7b 100644
--- i/pyproject.toml
+++ w/pyproject.toml
@@ -21,7 +21,6 @@ dependencies = [
   "transformers>=4.38.0",
   "triton; platform_system == 'Linux' and platform_machine == 'x86_64'",
   "mlx-lm; platform_system == 'Darwin' and platform_machine == 'arm64'",
-  "ninja",
 ]
 dynamic = ["version"]
 
